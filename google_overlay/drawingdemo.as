package{	import flash.display.MovieClip;import flash.display.Sprite;import flash.display.Bitmap;import flash.display.BitmapData;import flash.geom.Rectangle;import flash.geom.Point;import flash.geom.Matrix;import flash.geom.ColorTransform;import flash.display.BlendMode;import org.fenton.utils.maputils;// Import the dropshadow filterimport flash.filters.DropShadowFilter;// Set the width and height of the swf file. the class name should be the same as the file name[SWF(width="950",height="400", frameRate="24", backgroundColor="0xFFFFFF")]public class drawingdemo extends MovieClip{		// This function -- which has the same name as the class -- is the 'constructor' -- it gets called when the swf file is built. For simple drawings, we can put all the code in the constructor. For more complex tasks, we'd call other function. 	public function drawingdemo() {												// create a new sprite to create a pentagon		var pentagonSprite:Sprite = new Sprite();		pentagonSprite.graphics.lineStyle(2,0x999999);		pentagonSprite.graphics.beginFill(0xB5121B,1);		pentagonSprite.graphics.moveTo(3.75,15.0);		pentagonSprite.graphics.lineTo(11.25,5.0);		pentagonSprite.graphics.curveTo(15.0,0, 18.75, 5.0);		pentagonSprite.graphics.lineTo(26.25,15.0);		pentagonSprite.graphics.curveTo(30.0,20.0, 22.5, 20.0);		pentagonSprite.graphics.lineTo(7.5,20.0);		pentagonSprite.graphics.curveTo(0,20.0, 3.75, 15.0);		pentagonSprite.graphics.endFill();				pentagonSprite.x = 90;		pentagonSprite.y = 20;				addChild(pentagonSprite);				var bwidth:int = 400;		var bheight:int = 500;		var bitmapData : BitmapData = new BitmapData(bwidth, bheight, true, 0x00000000);				for (var k:int = 0; k < 10; k++) {			for (var j:int = 0; j < 10; j++) {						var s:Sprite = new Sprite();				s.graphics.lineStyle(2, 0x333333, 2);				s.graphics.beginFill(0xFF0000,0.6);				s.graphics.drawCircle(22*k, 22*j, 10);								bitmapData.draw(s);			}		}		var t:Sprite = new Sprite();		t.graphics.beginFill(0x000000, 1);		t.graphics.drawRect(75, 25, 35, 35);		var holeAlpha:BitmapData = new BitmapData(35, 35, true, 0x00000000);		//holeAlpha.draw(t);				var t2:Sprite = new Sprite();		t2.graphics.beginFill(0x000000, 0.5);		t2.graphics.drawRect(0, 0, 35, 35);		var holeSquare:BitmapData = new BitmapData(35, 35, true, 0x00000000);		//holeSquare.draw(t2);				var copyrect:Rectangle = new Rectangle(0,0, 35, 35);		var zeropoint:Point = new Point(0,0);		var c:Point= new Point(10, 10);				//b is bitmapdata		//bitmapData.copyPixels(holeSquare, copyrect, c , holeAlpha, zeropoint, true);  		// This seems not to work. 		// try drawing with a different blend mode.				var m:Matrix = new Matrix();		var ct:ColorTransform = new ColorTransform();				bitmapData.draw(t, m,ct,BlendMode.ERASE);		var bi:Bitmap = new Bitmap(bitmapData);				addChild(bi);							} // end of constructor		} // end of class } // end of package