// ************************************************************************ //																			//  A basic bounds class, intended to go with google's viewport coords//  Google's polygons have these, but this is lighter-weight (I hope) //  and, more to the point, can be used without instantiating a poly.//	Viewports don't have min lat and max lats', but left and right//  which is handy when dealing with the international dateline//  This bounds class does use min and max latitude though, because//  that's what we're getting outta postgres//  Hacked together by jacob fenton																						//																			// ************************************************************************ package org.fenton.shapes{		public class Bounds{			public var xmin:Number;	public var xmax:Number;	public var ymin:Number;	public var ymax:Number;				public function Bounds(this_xmin:Number, this_xmax:Number, this_ymin:Number, this_ymax:Number):void {		this.xmin = this_xmin;		this.xmax = this_xmax;		this.ymin = this_ymin;		this.ymax = this_ymax;			}	// ************************************************************************	//	// Does a 1-dimensional interval overlap another interval? 	// Helper function to check whether a shape is within the viewport	//	// ************************************************************************	private function check_interval_intersection(viewport_min, viewport_max, rectangle_min, rectangle_max):Boolean {		//trace("Checking interval intersection viewport_min: " + viewport_min + " viewport_max: " + viewport_max + " rectangle_min: " + rectangle_min + " rectangle_max " + rectangle_max)		if (viewport_min >= rectangle_min) {			if (viewport_min <= rectangle_max) {				return true;			} else {				return false;			}		} else {			if (viewport_max >= rectangle_min) {				return true;				}			else {				return false;			}		}	}		// ************************************************************************	//	// Do these bounds overlap with the viewport?	//	// ************************************************************************		// order is:['72143',-66.378 ,-66.303, 18.333,18.487]: xmin, xmax, ymin, ymax	public function check_viewport_overlap(viewport_minY, viewport_maxY, viewport_leftX, viewport_rightX) {			// At first glance, it may appear that this'll break on international datelines--		// but it seems to work. 		return ( check_interval_intersection(viewport_minY, viewport_maxY, this.ymin, this.ymax) && check_interval_intersection(viewport_leftX, viewport_rightX, this.xmin, this.xmax));					}		}}